{"ast":null,"code":"import { messageAdapter } from 'src/app/models/app-state.model';\nimport { createReducer, on, createFeatureSelector } from \"@ngrx/store\";\nimport { createMessageSuccess, createMessageFailure, createMessageRequest } from \"./createMessage.actions\";\nexport const initialState = messageAdapter.getInitialState({});\n\nconst _createMessageReducer = createReducer(initialState, on(createMessageRequest, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    messageError: null\n  });\n}), on(createMessageSuccess, (state, action) => {\n  return messageAdapter.addOne(action.message, Object.assign({}, state));\n}), on(createMessageFailure, (state, {\n  error\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    messageError: error,\n    message: null,\n    user: null\n  });\n}));\n\nexport function createMessageReducer(state, action) {\n  return _createMessageReducer(state, action);\n}\nexport const selectMessageState = createFeatureSelector('createMessage');","map":null,"metadata":{},"sourceType":"module"}