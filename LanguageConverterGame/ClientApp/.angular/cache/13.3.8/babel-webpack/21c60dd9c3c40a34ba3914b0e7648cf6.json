{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromRegister from '../state/register/register.reducer';\nimport * as RegisterActions from '../state/register/register.actions';\nlet RegisterComponent = class RegisterComponent {\n  constructor(store) {\n    this.store = store;\n    this.form = {\n      userName: \"\",\n      passWord: \"\"\n    };\n    this.errorMessage$ = this.store.select(fromRegister.selectError);\n    this.user$ = this.store.select(fromRegister.selectUser);\n  }\n\n  ngOnInit() {}\n\n  onSubmit() {\n    const {\n      userName,\n      passWord\n    } = this.form;\n    console.log(\"USERNAME: \" + userName, \"PASSWORD: \" + passWord);\n    console.log(this.form.passWord + \" IS THE PASSWORD\");\n    this.store.dispatch(RegisterActions.registerRequest({\n      userName,\n      passWord\n    }));\n  }\n\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['/register.component.css']\n}), __metadata(\"design:paramtypes\", [Store])], RegisterComponent);\nexport { RegisterComponent };","map":null,"metadata":{},"sourceType":"module"}