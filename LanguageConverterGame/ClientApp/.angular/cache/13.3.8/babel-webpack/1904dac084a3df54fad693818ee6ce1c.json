{"ast":null,"code":"import { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, of, exhaustMap, map, tap } from 'rxjs';\nimport * as RegisterActions from './register.actions';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"@angular/router\";\nexport let RegisterEffects = /*#__PURE__*/(() => {\n  class RegisterEffects {\n    constructor(actions$, authService, userService, router) {\n      this.actions$ = actions$;\n      this.authService = authService;\n      this.userService = userService;\n      this.router = router;\n      this.registerRequest$ = createEffect(() => this.actions$.pipe(ofType(RegisterActions.registerRequest), exhaustMap(action => this.userService.register(action.userName, action.passWord).pipe(map(response => RegisterActions.registerSuccess()), catchError(error => of(RegisterActions.registerFailure(error)))))));\n      this.registerSuccess$ = createEffect(() => this.actions$.pipe(ofType(RegisterActions.registerSuccess), tap(() => console.log('HELLO I AM HERE'))));\n    }\n\n  }\n\n  RegisterEffects.ɵfac = function RegisterEffects_Factory(t) {\n    return new (t || RegisterEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.UserService), i0.ɵɵinject(i4.Router));\n  };\n\n  RegisterEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterEffects,\n    factory: RegisterEffects.ɵfac\n  });\n  return RegisterEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}