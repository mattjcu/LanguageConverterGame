{"ast":null,"code":"import { createReducer, on, createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { createMessageSuccess, createMessageFailure, createMessageRequest } from \"./createMessage.actions\";\nexport const initialState = {\n  message: null,\n  translatedMessage: null,\n  userName: null\n};\n\nconst _createMessageReducer = createReducer(initialState, on(createMessageRequest, (state, {\n  userName,\n  message\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    messageError: null\n  });\n}), on(createMessageSuccess, (state, {\n  userName,\n  message,\n  translatedMessage\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    message: message,\n    translatedMessage: translatedMessage,\n    userName: userName\n  });\n}), on(createMessageFailure, (state, {\n  error\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    messageError: error,\n    message: null,\n    user: null\n  });\n}));\n\nexport function createMessageReducer(state, action) {\n  return _createMessageReducer(state, action);\n}\nexport const selectMessageState = createFeatureSelector('createMessage');\nexport const selectMessage = createSelector(selectMessageState, state => state.message);\nexport const selectTranslatedMessage = createSelector(selectMessageState, state => state.translatedMessage);\nexport const selectUser = createSelector(selectMessageState, state => state.userName);\nexport const selectError = createSelector(selectMessageState, state => state.messageError);","map":null,"metadata":{},"sourceType":"module"}